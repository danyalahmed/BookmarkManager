// <auto-generated />
using CW03.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CW03.Migrations
{
    [DbContext(typeof(CW03Context))]
    [Migration("20210907084437_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CW03.Models.BookmarkEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookmarkType");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.Property<string>("ParentPath");

                    b.Property<bool>("ReadOnly");

                    b.HasKey("Id");

                    b.ToTable("BookmarkEntity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BookmarkEntity");
                });

            modelBuilder.Entity("CW03.Models.Folder", b =>
                {
                    b.HasBaseType("CW03.Models.BookmarkEntity");


                    b.ToTable("Folder");

                    b.HasDiscriminator().HasValue("Folder");
                });

            modelBuilder.Entity("CW03.Models.Item", b =>
                {
                    b.HasBaseType("CW03.Models.BookmarkEntity");

                    b.Property<string>("Content");

                    b.ToTable("Item");

                    b.HasDiscriminator().HasValue("Item");
                });

            modelBuilder.Entity("CW03.Models.ItemLink", b =>
                {
                    b.HasBaseType("CW03.Models.Item");

                    b.Property<string>("Title");

                    b.ToTable("ItemLink");

                    b.HasDiscriminator().HasValue("ItemLink");
                });

            modelBuilder.Entity("CW03.Models.ItemLocation", b =>
                {
                    b.HasBaseType("CW03.Models.Item");


                    b.ToTable("ItemLocation");

                    b.HasDiscriminator().HasValue("ItemLocation");
                });

            modelBuilder.Entity("CW03.Models.ItemTextFile", b =>
                {
                    b.HasBaseType("CW03.Models.Item");


                    b.ToTable("ItemTextFile");

                    b.HasDiscriminator().HasValue("ItemTextFile");
                });
#pragma warning restore 612, 618
        }
    }
}
